{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  var last = 0;\n  var timeout = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var now = Date.now();\n\n    if (now - last > ms) {\n      fn.apply(void 0, args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        fn.apply(void 0, args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}","map":{"version":3,"sources":["../src/debounce.js"],"names":["last","timeout","args","now","Date","fn","clearTimeout","setTimeout","Math","ms"],"mappings":";;;;;;;AAAe,SAAA,QAAA,CAAA,EAAA,EAAA,EAAA,EAAkB;AAC/B,MAAI,CAAJ,EAAA,EAAS;AACP,WAAA,EAAA;AACD;;AAED,MAAIA,IAAI,GAAR,CAAA;AACA,MAAIC,OAAO,GAAX,IAAA;AAEA,SAAO,YAAa;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATC,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,MAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAClB,QAAMC,GAAG,GAAGC,IAAI,CAAhB,GAAYA,EAAZ;;AAEA,QAAID,GAAG,GAAHA,IAAAA,GAAJ,EAAA,EAAqB;AACnBE,MAAAA,EAAE,CAAFA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA;AACAL,MAAAA,IAAI,GAAJA,GAAAA;AAFF,KAAA,MAGO;AACLM,MAAAA,YAAY,CAAZA,OAAY,CAAZA;AAEAL,MAAAA,OAAO,GAAGM,UAAU,CAAC,YAAM;AACzBF,QAAAA,EAAE,CAAFA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,IAAAA;AACAL,QAAAA,IAAI,GAAGI,IAAI,CAAXJ,GAAOI,EAAPJ;AAFkB,OAAA,EAGjBQ,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYC,EAAE,GAAFA,GAAAA,GAHfR,IAGGO,CAHiB,CAApBP;AAID;AAbH,GAAA;AAeD","sourcesContent":["export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}